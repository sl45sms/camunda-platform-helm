name: Test core functionality of Camunda Platform

vars:
  releaseName: '{{ .RELEASE_NAME | default "integration" }}'
  venomClientID: '{{ .TEST_CLIENT_ID | default "venom" }}'
  # Passed as a Venom var, e.g. "VENOM_VAR_TEST_CLIENT_SECRET".
  venomClientSecret: "{{ .TEST_CLIENT_SECRET }}"

testcases:

# https://docs.camunda.io/docs/self-managed/identity/user-guide/generating-m2m-tokens/
- name: TEST - Generating machine-to-machine token
  steps:
  - name: "{{ .value.component }}"
    type: http
    range:
    - component: Tasklist
      clientID: tasklist
      clientSecret: "{{ .TASKLIST_CLIENT_SECRET }}"
    - component: Operate
      clientID: operate
      clientSecret: "{{ .OPERATE_CLIENT_SECRET }}"
    - component: Optimize
      clientID: optimize
      clientSecret: "{{ .OPTIMIZE_CLIENT_SECRET }}"
    method: POST
    url: "http://{{ .releaseName }}-keycloak/auth/realms/camunda-platform/protocol/openid-connect/token"
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: |-
      client_id={{ .value.clientID }}&client_secret={{ .value.clientSecret }}&grant_type=client_credentials
    # info: |
    #   Component: {{ .value.component }}
    #   - Response Body: {{ .result.body }}
    assertions:
    - result.statuscode ShouldEqual 200

# Helper to get access token for Venom Identity client which's seeded during Helm deployment.
- name: helperVenomToken
  steps:
  - name: Get Venom token
    type: http
    method: POST
    url: "http://{{ .releaseName }}-keycloak/auth/realms/camunda-platform/protocol/openid-connect/token"
    headers:
      Content-Type: application/x-www-form-urlencoded
    body: "client_id={{ .venomClientID }}&client_secret={{ .venomClientSecret }}&grant_type=client_credentials"
    # info: |
    #   - Response Body: {{ .result.body }}
    assertions:
    - result.statuscode ShouldEqual 200
    vars:
      jwt:
        from: result.bodyjson.access_token

# TODO: Add Optimize.
- name: TEST - Interacting with components web API
  steps:
  - name: "{{ .value.component }}"
    type: http
    range:
    - component: Identity
      url: "http://{{ .releaseName }}-identity/api/users"
      method: GET
      body: ''
    - component: Operate
      docs: https://docs.camunda.io/docs/self-managed/operate-deployment/operate-authentication/
      url: "http://{{ .releaseName }}-operate/v1/process-definitions/search"
      method: POST
      body: '{}'
    - component: Tasklist
      docs: https://docs.camunda.io/docs/self-managed/tasklist-deployment/tasklist-authentication/
      url: "http://{{ .releaseName }}-tasklist/graphql"
      method: POST
      body: '{"query": "{tasks(query:{}){id name}}"}'
    method: "{{ .value.method }}"
    url: "{{ .value.url }}"
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ .helperVenomToken.jwt }}"
    body: "{{ .value.body }}"
    # info: |
    #   Component: {{ .value.component }}
    #   - Request Method: {{ .value.method }}
    #   - Request Body: {{ .result.request.body }}
    #   - Response Body: {{ .result.body }}
    assertions:
    - result.statuscode ShouldEqual 200

- name: TEST - Interacting with Zeebe Gateway
  steps:
  - name: Check Zeebe Gateway status
    type: exec
    script: |
      zbctl --insecure --address "{{ .releaseName }}-zeebe-gateway:26500" status
    assertions:
    - result.code ShouldEqual 0
    - result.systemout ShouldContainSubstring "Leader, Healthy"
    - result.systemout ShouldNotContainSubstring Unhealthy
    - result.timeseconds ShouldBeLessThan 1

- name: TEST - Deploying BPMN process
  steps:
  - name: Deploy BPMN process to Zeebe
    type: exec
    script: |
      zbctl --insecure --address "{{ .releaseName }}-zeebe-gateway:26500" deploy /mnt/fixtures/test-process.bpmn
    assertions:
    - result.code ShouldEqual 0
  - name: Check deployed BPMN process in Operate
    type: http
    method: POST
    url: "http://{{ .releaseName }}-operate/v1/process-definitions/search"
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ .helperVenomToken.jwt }}"
    body: '{}'
    retry: 3
    delay: 15
    # info: |
    #   - Request Body: {{ .result.request.body }}
    #   - Response Body: {{ .result.body }}
    assertions:
    - result.statuscode ShouldEqual 200
    # NOTE: JSON keys are lowercased automatically, the original key is "bpmnProcessId".
    - result.bodyjson.items.items0.bpmnprocessid ShouldEqual it-test-process
