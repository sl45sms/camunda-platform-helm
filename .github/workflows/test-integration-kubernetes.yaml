# TODO: Later we should move to Testkube.
# https://github.com/kubeshop/testkube
name: "Test - Integration - Kubernetes"

on:
  pull_request:
    paths:
    - '.github/**'
    - '.tool-versions'
    - 'charts/**'
    - 'go.*'
  workflow_dispatch: { }

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CAMUNDA_DISTRO_TEST_DELETE_NAMESPACE: ${{ !secrets.ACTIONS_STEP_DEBUG }}
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
  GITHUB_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
  GITHUB_WORKFLOW_RUN_ID: ${{ github.run_id }}
  KUBECONFIG: .github/config/kubeconfig
  TEST_SCENARIOS_DIR: test/integration/scenarios
  TEST_CLUSTER_TYPE: kubernetes
  TEST_DOCKER_USERNAME: ${{ secrets.TEST_DOCKER_USERNAME }}
  TEST_DOCKER_PASSWORD: ${{ secrets.TEST_DOCKER_PASSWORD }}
  # This is needed to access WebModeler Docker image. It will be removed once WebModeler is public.
  TEST_DOCKER_USERNAME_CAMUNDA_CLOUD: ${{ secrets.CAMUNDA_REGISTRY_USER }}
  TEST_DOCKER_PASSWORD_CAMUNDA_CLOUD: ${{ secrets.CAMUNDA_REGISTRY_PASSWORD }}


jobs:
  test:
    name: ${{ matrix.test.title }}
    if: github.ref == 'refs/heads/main' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      fail-fast: false
      matrix:
        test:
        - title: ChartWithDefaultValues
          dir: chart-with-default-values
          description: Test Camunda Platform Helm chart default values
        - title: ChartUpgrade
          dir: chart-upgrade
          description: Test Camunda Platform Helm chart upgrade
        - title: ChartWithCustomValues
          dir: chart-with-custom-values
          description: Test Camunda Platform Helm chart custom values
        - title: ChartWithKeycloakV19
          dir: chart-with-keycloak-v19
          description: Test Camunda Platform Helm chart with next supported Keycloak version v8.2
        - title: ChartWithWebModeler
          dir: chart-with-web-modeler
          description: Test Camunda Platform Helm chart with WebModeler enabled which is still beta
    steps:
    - uses: actions/checkout@v3
    - name: Login to GKE
      uses: ./.github/actions/gke-login
      with:
        credentials-json: '${{ secrets.GCP_CREDENTIALS }}'
        cluster-name: ${{ secrets.GKE_CLUSTER }}
        cluster-location: ${{ secrets.GKE_ZONE }}
    - name: Set test vars
      id: vars
      run: |
        sudo apt install -y pwgen
        GITHUB_PR_HEAD_SHA_SHORT=$(echo $GITHUB_PR_HEAD_SHA | cut -c 1-7)
        # NOTE: We should use the matrix job id var once it's available.
        # https://github.com/orgs/community/discussions/40291
        GITHUB_WORKFLOW_JOB_ID=$(pwgen 6 1 -A)
        echo "GITHUB_WORKFLOW_JOB_ID=$GITHUB_WORKFLOW_JOB_ID" >> $GITHUB_ENV
        # Set full name for the namespace.
        TEST_NAMESPACE_PART1="camunda-platform-pr-$GITHUB_PR_NUMBER"
        TEST_NAMESPACE_PART2="sha-$GITHUB_PR_HEAD_SHA_SHORT-run-$GITHUB_WORKFLOW_RUN_ID-sfx-$GITHUB_WORKFLOW_JOB_ID"
        echo "TEST_NAMESPACE=$TEST_NAMESPACE_PART1-$TEST_NAMESPACE_PART2" >> $GITHUB_ENV
    - name: Install env dependencies
      uses: asdf-vm/actions/install@v1
    - name: Add Helm repos and dependencies
      run: |
        make helm.repos-add
        make helm.dependency-update
    - name: Create test namespace
      run: |
        kubectl create ns $TEST_NAMESPACE
        kubectl label ns $TEST_NAMESPACE github-run-id=$GITHUB_WORKFLOW_RUN_ID
        kubectl label ns $TEST_NAMESPACE github-job-id=$GITHUB_WORKFLOW_JOB_ID
    - name: Pre setup
      timeout-minutes: 5
      run: |
        task -d $TEST_SCENARIOS_DIR/${{ matrix.test.dir }} setup.pre
    - name: Setup Camunda Platform
      run: |
        task -d $TEST_SCENARIOS_DIR/${{ matrix.test.dir }} setup.exec
    - name: Post setup
      timeout-minutes: 5
      run: |
        task -d $TEST_SCENARIOS_DIR/${{ matrix.test.dir }} setup.post
    - name: ⭐️ Run Preflight TestSuite ⭐️
      timeout-minutes: 5
      run: |
        task -d $TEST_SCENARIOS_DIR/${{ matrix.test.dir }} test.preflight
    - name: ⭐️ Run Core TestSuite ⭐️
      timeout-minutes: 5
      run: |
        task -d $TEST_SCENARIOS_DIR/${{ matrix.test.dir }} test.core
    - name: Get Pods info on failure
      if: failure()
      # TODO: Better way to collect logs and store them as artifacts in GitHub Actions.
      run: |
        kubectl -n $TEST_NAMESPACE get po
        kubectl -n $TEST_NAMESPACE get po | grep -v "Completed" | awk '/0\//{print $1}' | while read pod_name; do
          echo -e "\n###Failed Pod: ${pod_name}###\n";
          kubectl -n $TEST_NAMESPACE describe po ${pod_name};
          kubectl -n $TEST_NAMESPACE logs ${pod_name};
        done
    - name: Cleanup test namespace
      if: always() && env.CAMUNDA_DISTRO_TEST_DELETE_NAMESPACE != 'false'
      run: |
        kubectl delete ns \
          --ignore-not-found=true \
          -l github-run-id=$GITHUB_WORKFLOW_RUN_ID \
          -l github-job-id=$GITHUB_WORKFLOW_JOB_ID
